name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: live_server_kbg
      - name: Install JDK 11
        uses: actions/setup-java@v3
        # jdk 11버젼을 쓰기위한 세팅
        with:
          java-version: '11'
          distribution: 'temurin'
        # clean 타겟 폴더 정리
        # -D 옵션 명령어를 사용할때 씀
      - name: Build SpringBoot Server
        # 형식 chmod 사용자번호, 그룹번호 , 외부의 번호  권한을 주고싶은 파일
        # encode ->
        # decode -> secret.yml을 만들어서 넣어줘야댐 
        # 패키징을 해주면 jar파일이 생김
        run: |
          echo ${{ secrets.APPLICATION_SECRET }} | base64 --decode > ./src/main/resources/application-secret.yml
          chmod 700 ./mvnw 
          ./mvnw clean package -Dtestskip
      - name: Login DockerHub    
        uses: docker/login-action@v1
        # secrets : settings에서 접근한 secret
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: show Directory
      #   run: |
      #     ls -a
      #     cd ./target
      #     ls -a
      # back의 docker파일을 빌드
      # ${{ secrets.DOCKERHUB_USERNAME }}/live_serve 해당 유저가 이미지를 만들고 파일 이름 : live_server라는 이름으로 만듬
      - name: Build Docker
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/live_server .
      # live_server : repository의 이름
      - name: Push DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/live_server:latest
